Image Processing Primer

Given a set of sample images attached with this assignment, write executable functions for the following operations as directed below.

For all operation, implement with your own functions.

(1) Read both the images as provided and display them. -- 5 M
(2) Convert the color image into a gray level image and use it in subsequent processing. -- 5M
(3) Add Gaussian noise with s.d. s (to be taken as input)  along both horizontal and vertical directions to 'cap.bmp' image and then perform denoising by median filtering and mean filtering. Display the original, noisy, and filtered images.
-- 20
(4) Plot PSNR values against s for each cases (median and mean filters)-- 10 M
I
(3) Compute  edge pixels of image 'lego.tif' using Laplacian of Gaussian (LoG) operator by detecting zero-crossings. Display the laplacian image and the zero-crossings. -- 20 M

(4) Partition the image 'cap.bmp' into 8x8 non-overlapping blocks and for each block compute 8x8 DCT coefficients. If any boundary block has less number of rows and columns pad them with zeroes to make them 8x8. Define three thresholds (in decreasing order of magnitudes) for low frequency coefficients (i+j<6), mid-frequency zone (5<i+j<10) and high-frequency zone (i+j>10). Set the coefficients in each zone to zero if they are below the respective thresholds. Display the resulting block-DCT transformed image. Perform the inverse DCT operations and display the processed image along with original image. -- 20 M

(5) Implement Harris corner detection algorithm and apply on the image 'lego.tif'. Use empirical thresholding to filter the responses.  -- 20 M

Bonus: Compare with the results obtained by using standard library/package functions. -- 10 M

You may implement your programs in OpenCV/MATLAB language with necessary user's interfaces and visualization of your results and input.
Please provide a documentation for compiling and running the programs in a README file.
The whole project should be submitted in a single tar or zip file.
